//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DFAAssignment2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DatabaseFirstEntities : DbContext
    {
        public DatabaseFirstEntities()
            : base("name=DatabaseFirstEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BusInfom> BusInfoms { get; set; }
    
        public virtual int spInsertData(string boardingPoint, Nullable<System.DateTime> travelDate, Nullable<decimal> amount, Nullable<int> rating)
        {
            var boardingPointParameter = boardingPoint != null ?
                new ObjectParameter("BoardingPoint", boardingPoint) :
                new ObjectParameter("BoardingPoint", typeof(string));
    
            var travelDateParameter = travelDate.HasValue ?
                new ObjectParameter("TravelDate", travelDate) :
                new ObjectParameter("TravelDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertData", boardingPointParameter, travelDateParameter, amountParameter, ratingParameter);
        }
    
        public virtual ObjectResult<spRetriveByAmount_Result> spRetriveByAmount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRetriveByAmount_Result>("spRetriveByAmount");
        }
    
        public virtual ObjectResult<spRetriveByBoardingPoint_Result> spRetriveByBoardingPoint()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRetriveByBoardingPoint_Result>("spRetriveByBoardingPoint");
        }
    
        public virtual ObjectResult<spRetriveByDate_Result> spRetriveByDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRetriveByDate_Result>("spRetriveByDate");
        }
    
        public virtual ObjectResult<spRetriveByRatings_Result> spRetriveByRatings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRetriveByRatings_Result>("spRetriveByRatings");
        }
    }
}
